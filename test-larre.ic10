alias larre d0
alias seedBin d1
alias fertBin d2

define seedBinMark HASH("Seed Bin")
define fertBinMark HASH("Fert Bin")
define dropBinMark HASH("Drop Bin")

push 0
push fertBinMark
push HASH("D1") #push corresponding device names onto stack starting from junction 0
push HASH("D2") #YOU MUST ALSO push the three 3 Mark vals above somewhere on the stack
push HASH("D3")
push HASH("D4")
push HASH("D5")
push HASH("D6")
push HASH("D7")
push HASH("D8")
push HASH("D9")
push HASH("D10")
push HASH("D11")
push HASH("D12")
push HASH("D13")
push HASH("D14")
push HASH("D15")
push HASH("D16")
push HASH("D17")
push HASH("D18")
push HASH("D19")
push HASH("D20")
push seedBinMark
push dropBinMark

define potID HASH("StructureHydroponicsTrayData")
alias stackSize r15
alias pot r14
alias seedPos r13
alias fertPos r12
alias outPos r11

move stackSize sp
pop r0 #iterate through stack once to compute bin junction positions
brne r0 seedBinMark 2
move seedPos sp
brne r0 fertBinMark 2
move fertPos sp
brne r0 dropBinMark 2
move outPos sp
brgtz sp -7

IterateStackDevices:
move sp stackSize #start iterating through all the devices on the stack

CheckNextDevice:
pop pot
beq pot seedBinMark CheckNextDevice # not a plant
beq pot fertBinMark CheckNextDevice # not a plant
beq pot dropBinMark CheckNextDevice # not a plant

lbns r0 potID pot 0 Health Maximum # Check if there is a dead plant
beqz r0 DeadPlant # Handle the dead plant

lbns r0 potID pot 0 Occupied Maximum # Check if there is a plant in slot 0
bnez r0 SkipPlant #skip planting if slot occupied

ls r0 seedBin 0 Occupied
beqz r0 SkipPlant #skip planting if no seeds in bin

s larre Setting seedPos #otherwise,
jal SendLarreToTask #send larre to the seed bin,
jal DoAtTray #then back to the tray

SkipPlant:
lbns r0 potID pot 1 Occupied Maximum
bnez r0 CheckHarvestable #handle fertilizing like planting
ls r0 fertBin 0 Occupied
beqz r0 CheckHarvestable
s larre Setting fertPos
jal SendLarreToTask
jal DoAtTray

CheckHarvestable:
lbns r0 potID pot 0 Seeding Minimum
blez r0 Iterate #skip harvesting if plant not seeding

ContinueHarvest:
lbns r0 potID pot 0 Mature Minimum #keep harvesting while mature
blez r0 Iterate #end harvest when no longer mature
jal DoAtTray #otherwise, harvest tray,
s larre Setting outPos #then go deposit in the export bin
jal SendLarreToTask
j ContinueHarvest #then check again to see if there is more to harvest

Iterate:
bgtz sp CheckNextDevice #check next tray in stack when all is handled
yield #wait, and then check all the trays again
j IterateStackDevices

DoAtTray:
s larre Setting sp #stack pointer after getting tray is equal to junction index for
SendLarreToTask:
yield #wait for larre to make it to his destination before calling Activate
l r0 larre Setting
sb -815193061 Setting r0
l r0 larre Idle
beqz r0 SendLarreToTask

ActivateLarre:
s larre Activate 1
sleep 2 #wait for larre to grab/drop
ls r0 larre 0 OccupantHash
s db Setting r0
j ra
DeadPlant:
jal DoAtTray